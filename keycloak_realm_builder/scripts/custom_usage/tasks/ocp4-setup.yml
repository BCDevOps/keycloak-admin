---
# tasks to create and setup realm for OCP4 cluster login
- name: Setup keycloak variables for the environment
  set_fact: 
    keycloak_url: "{{ lookup('vars', env + '_keycloak_url') }}"
    grant_type: "{{ lookup('vars', env + '_grant_type') }}"
    keycloak_user_id: "{{ lookup('vars', env + '_keycloak_user_id') }}"
    keycloak_user_password: "{{ lookup('vars', env + '_keycloak_user_password') }}"
    otp_code: "{{ lookup('vars', env + '_otp_code') }}"
    keycloak_client_id: "{{ lookup('vars', env + '_keycloak_client_id') }}"
    keycloak_client_secret: "{{ lookup('vars', env + '_keycloak_client_secret') }}"

- name: Get access token
  include_tasks: access-token.yml

- name: Setup facts
  set_fact:
    realm: "{{ realm_data.realm.id }}"

### ========================================================
# Make sure realm created already:

- name: Check if realm exists
  uri: 
    url: "{{ keycloak_url }}/auth/admin/realms/{{ realm }}"
    method: GET
    body_format: json
    return_content: yes
    headers: 
      Authorization: "Bearer {{ token_data }}"
  register: realm_status
  ignore_errors: true

- name: Set realm id fact
  set_fact:
    realm_id: "{{ realm_status.json.id | default('') }}"

- debug: msg="Working on realm - {{ realm }} - id {{ realm_id }}"

- name: Setup ocp4 specific variables
  set_fact: 
    ocp4_realm_role_name: github-org-bcdevops
    ocp4_idp_realm_alias: github
    ocp4_mapper_name: github-claim-to-role-bcdevops
    ocp4_first_broker_login_flow_alias: "first broker login"
    ocp4_github_first_broker_login_flow_alias: "Github first broker login"

### ========================================================
# Configure GitHub IDP to make use of the Organization mappers:

- name: Read in new json data for realm role
  set_fact: 
    realm_role_content: "{{ lookup('template', 'templates/ocp4-github-org-bcdevops-realm-role.json.j2') }}"

- name: Create realm roles for target GitHub Org (BCDevOps)
  uri: 
    url: "{{ keycloak_url }}/auth/admin/realms/{{ realm }}/roles"
    method: POST
    body_format: json
    body: "{{ realm_role_content }}"
    return_content: yes
    status_code: 201
    headers: 
      Authorization: "Bearer {{ token_data }}"

- name: Read in new json data for mapper
  set_fact: 
    mapper_content: "{{ lookup('template', 'templates/ocp4-github-mappers.json.j2') }}"

- name: Create GitHub IDP mapper - GitHub org to role
  uri: 
    url: "{{ keycloak_url }}/auth/admin/realms/{{ realm }}/identity-provider/instances/{{ ocp4_idp_realm_alias }}/mappers"
    method: POST
    body_format: json
    body: "{{ mapper_content }}"
    return_content: yes
    status_code: 201
    headers: 
      Authorization: "Bearer {{ token_data }}"

### ========================================================
### GitHub Auth flow setup:
# TODO: Setup First Broker Login flow for GitHub IDP
#   - take a copy of the original flow
#   - disable the user review profile config execution, which helps to avoid unauthorized users to waste the time
#   - also disable OTP sub flow to avoid triple factor auth
# - Config GitHub IDP flows
#   - override the first and post broker login flows in the IDP settings


- name: Read in new json data for flow
  set_fact: 
    flow_content: "{{ lookup('template', 'templates/ocp4-first-broker-login-flow.json.j2') }}"

- name: Copy the default First Broker Login flow
  uri: 
    url: "{{ keycloak_url }}/auth/admin/realms/{{ realm }}/authentication/flows/{{ ocp4_first_broker_login_flow_alias | urlencode }}/copy"
    method: POST
    body_format: json
    body: "{{ flow_content }}"
    return_content: yes
    status_code: 201
    headers: 
      Authorization: "Bearer {{ token_data }}"

- name: Check auth flows
  uri: 
    url: "{{ keycloak_url }}/auth/admin/realms/{{ realm }}/authentication/flows"
    method: GET
    body_format: json
    return_content: yes
    headers: 
      Authorization: "Bearer {{ token_data }}"
  register: flow_status
  ignore_errors: true


# TODO: Setup a Post Broker Login flow that filters GitHub org roles
#   - start with a new flow
#   - have a sub execution of type `Required Role By Client`
#   - config the execution with target client, role to filter on, and a URL to redirect to if user does not have the required role
 